{"version":3,"sources":["rocket.jpg","FormInput.js","RegisterButton.js","store/actions.js","TwoInputRow.js","RegistrationForm.js","YouAreRegistred.js","App.js","store/reducers.js","sagas.js","services/FirebaseService.js","index.js"],"names":["module","exports","FormInput","props","className","label","type","value","name","onChange","RegisterButton","onClick","onSubmit","createInputChangeAction","event","inputName","target","payload","createFormSubmitAction","TwoInputRow","children","connect","state","registrationFormFields","dispatch","changeFormInput","bindActionCreators","submitForm","handleInputChange","firstName","secondName","username","email","phone","preventDefault","YouAreRegistred","id","href","isRegistred","src","rocketImage","alt","height","initialState","formSubmitWorker","watchFormSubmit","firebaseService","writeUserData","user","a","db","collection","add","this","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","sendRegisterRequest","select","call","result","console","log","put","takeEvery","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","action","newState","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,oC,kSCa5BC,G,YAVG,SAACC,GACf,OACI,yBAAKC,UAAU,eACX,0BAAMA,UAAU,eAAeD,EAAME,OACrC,6BACA,2BAAOC,KAAK,OAAOC,MAAOJ,EAAMI,MAAOH,UAAU,aAAaI,KAAML,EAAMK,KAAMC,SAAUN,EAAMM,cCC7FC,G,MANQ,SAACP,GACpB,OACI,4BAAQC,UAAU,kBAAkBE,KAAK,SAASK,QAASR,EAAMS,UAAjE,cCAKC,EAA0B,SAACC,GACpC,MAAO,CACHR,KAPyB,oBAQzBS,UAAWD,EAAME,OAAOR,KACxBS,QAASH,EAAME,OAAOT,QAKjBW,EAAyB,WAClC,MAAO,CACHZ,KAfmB,gBCUZa,G,MARK,SAAChB,GACjB,OACI,yBAAKC,UAAU,iBACVD,EAAMiB,YCiDJC,eAXS,SAACC,GACvB,OAAO,eAAKA,EAAMC,2BAGO,SAACC,GAC1B,MAAO,CACLC,gBAAiBC,YAAmBb,EAAyBW,GAC7DG,WAAYD,YAAmBR,EAAwBM,MAI5CH,EA9CU,SAAClB,GAExB,IAAMyB,EAAoB,SAACd,IAEzBW,EAD4BtB,EAApBsB,iBACQX,IAUlB,OACE,0BAAMV,UAAU,qBACd,yBAAKA,UAAU,YACb,uBAAGA,UAAU,uBACb,8BAAM,2BAAG,mCAAH,UAER,iDACA,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAWC,MAAM,aAAaG,KAAK,YAAYD,MAAOJ,EAAM0B,UAAWpB,SAAUmB,IACjF,kBAAC,EAAD,CAAWvB,MAAM,cAAcG,KAAK,aAAaD,MAAOJ,EAAM2B,WAAYrB,SAAUmB,KAEtF,kBAAC,EAAD,CAAWvB,MAAM,WAAWG,KAAK,WAAWD,MAAOJ,EAAM4B,SAAUtB,SAAUmB,IAC7E,kBAAC,EAAD,CAAWvB,MAAM,QAAQG,KAAK,QAAQD,MAAOJ,EAAM6B,MAAOvB,SAAUmB,IACpE,kBAAC,EAAD,CAAWvB,MAAM,eAAeG,KAAK,QAAQD,MAAOJ,EAAM8B,MAAOxB,SAAUmB,IAC3E,yBAAKxB,UAAU,kBACb,kBAAC,EAAD,CAAgBQ,SAtBD,SAACE,GACpBA,EAAMoB,kBAGNP,EADuBxB,EAAfwB,sB,iBCDGQ,G,MAfS,SAAChC,GACrB,OACI,yBAAKC,UAAU,qBACX,+DACA,6DAAmCD,EAAMiC,IACzC,2EAHJ,aAIc,uBAAGC,KAAK,wBAAwBrB,OAAO,UAAvC,YACV,6BALJ,2DAMe,uBAAGqB,KAAK,0BAA0BrB,OAAO,UAAzC,YACX,6BAPJ,WAQY,uBAAGqB,KAAK,kGAAR,iCCULhB,eAPS,SAACC,GACrB,MAAO,CACHgB,YAAahB,EAAMgB,YACnBF,GAAId,EAAMc,MAIHf,EAhBH,SAAClB,GACT,OACI,yBAAKC,UAAU,OACVD,EAAMmC,YAAc,kBAAC,EAAD,CAAiBF,GAAIjC,EAAMiC,KAAS,kBAAC,EAAD,MACzD,yBAAKG,IAAKC,IAAaC,IAAI,GAAGC,OAAO,cCT3CC,G,MAAe,CACjBL,aAAa,EACbF,GAAI,KACJb,uBAAwB,CACpBM,UAAW,GACXC,WAAY,GACZC,SAAU,GACVC,MAAO,GACPC,MAAO,M,8ECaLW,I,WAcOC,GA3BXC,EAAkB,ICNpB,aAAe,IAAD,gCAcdC,cAdc,uCAcE,WAAOC,GAAP,SAAAC,EAAA,sEACC,EAAKC,GAAGC,WAAW,SAASC,IAAIJ,GADjC,mFAdF,sDACVK,KAAKC,eAAiB,CAClBC,OAAQ,0CACRC,WAAY,4BACZC,YAAa,mCACbC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,eACnBC,MAAO,6CAEXC,gBAAuBT,KAAKC,gBAC5BD,KAAKH,GAAKY,eDHlB,SAASC,EAAoBxC,GAEzB,OAAOuB,EAAgBC,cAAc,CACjClB,UAAWN,EAAuBM,UAClCC,WAAYP,EAAuBO,WACnCC,SAAUR,EAAuBQ,SACjCC,MAAOT,EAAuBS,MAC9BC,MAAOV,EAAuBU,QAItC,SAAUW,IAAV,yEAEmC,OAFnC,SAEyCoB,aAAO,SAAA1C,GAAK,OAAIA,EAAMC,0BAF/D,OAMuB,OAJbA,EAFV,yBAM6B0C,YAAKF,EAAqBxC,GANvD,OAQQ,OAFM2C,EANd,OAOQC,QAAQC,IAAI,6BAA8BF,EAAO9B,IAPzD,UAQciC,YNVH,CACH/D,KApB8B,yBAqB9BW,QMQ4CiD,ENR5B9B,KMAxB,0DAUQ+B,QAAQC,IAAI,kCAVpB,sDAcO,SAAUvB,IAAV,iEACH,OADG,SACGyB,YNrCiB,cMqCM1B,GAD1B,uCE1BP,IAAM2B,EAAmBC,OAAOC,sCAAwCC,IAElEC,EAAiBC,cAEjBC,EAAQC,aHDP,WAAoD,IAA/BxD,EAA8B,uDAAtBqB,EAAcoC,EAAQ,uCACtD,OAAQA,EAAOzE,MACX,ILhByB,oBKiBrB,IAAM0E,EAAQ,eAAQ1D,GAEtB,OADA0D,EAASzD,uBAAuBwD,EAAOhE,WAAagE,EAAO9D,QACpD+D,EACX,ILlB8B,yBKmB1B,OAAO,eAAK1D,EAAZ,CAAmBgB,aAAa,EAAMF,GAAI2C,EAAO9D,UACrD,QACI,OAAOK,KGRoBiD,EAAiBU,YAAgBN,KACxEA,EAAeO,IAAIrC,GAEnBsC,IAASC,OAAO,kBAAC,IAAD,CAAUP,MAAOA,GAAO,kBAAC,EAAD,OAAoBQ,SAASC,eAAe,W","file":"static/js/main.f154997c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rocket.076fbf9a.jpg\";","import React from 'react';\nimport './FormInput.css';\n\nconst FormInput = (props) => {\n    return (\n        <div className=\"input-block\">\n            <span className=\"input-label\">{props.label}</span>\n            <br/>\n            <input type=\"text\" value={props.value} className=\"form-input\" name={props.name} onChange={props.onChange} />\n        </div>\n    )\n}\n\nexport default FormInput;","import React from 'react';\nimport './RegisterButton.css';\n\nconst RegisterButton = (props) => {\n    return (\n        <button className=\"register-button\" type=\"submit\" onClick={props.onSubmit}>Register</button>\n    )\n}\n\nexport default RegisterButton;","export const CHANGE_FORM_INPUT = 'CHANGE_FORM_INPUT';\nexport const FORM_SUBMIT = 'FORM_SUBMIT';\nexport const REGISTRATION_SUCCEEDED = 'REGISTRATION_SUCCEEDED';\n\n// action creator for input change events\nexport const createInputChangeAction = (event) => {\n    return {\n        type: CHANGE_FORM_INPUT,\n        inputName: event.target.name,\n        payload: event.target.value,\n    }\n};\n\n// action creator for registration form submit events\nexport const createFormSubmitAction = () => {\n    return {\n        type: FORM_SUBMIT,\n    }\n};\n\nexport const createRegistrationSucceededAction = (docRef) => {\n    return {\n        type: REGISTRATION_SUCCEEDED,\n        payload: docRef.id,\n    }\n};\n","import React from 'react';\nimport './TwoInputRow.css';\n\nconst TwoInputRow = (props) => {\n    return (\n        <div className=\"two-input-row\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default TwoInputRow;","import React from 'react';\nimport './RegistrationForm.css';\nimport FormInput from './FormInput';\nimport RegisterButton from './RegisterButton';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { createInputChangeAction, createFormSubmitAction } from './store/actions';\nimport TwoInputRow from './TwoInputRow';\n\nconst RegistrationForm = (props) => {\n\n  const handleInputChange = (event) => {\n    const { changeFormInput } = props;\n    changeFormInput(event);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { submitForm } = props;\n    submitForm();\n  }\n\n  return (\n    <form className=\"registration-form\">\n      <div className=\"branding\">\n        <i className=\"fas fa-layer-group\"></i>\n        <span><i><b>your</b>text</i></span>\n      </div>\n      <h1>Registration Form</h1>\n      <TwoInputRow>\n        <FormInput label=\"First Name\" name=\"firstName\" value={props.firstName} onChange={handleInputChange} />\n        <FormInput label=\"Second Name\" name=\"secondName\" value={props.secondName} onChange={handleInputChange} />\n      </TwoInputRow>\n      <FormInput label=\"Username\" name=\"username\" value={props.username} onChange={handleInputChange} />\n      <FormInput label=\"Email\" name=\"email\" value={props.email} onChange={handleInputChange} />\n      <FormInput label=\"Phone Number\" name=\"phone\" value={props.phone} onChange={handleInputChange} />\n      <div className=\"button-wrapper\">\n        <RegisterButton onSubmit={handleSubmit} />\n      </div>\n    </form>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return { ...state.registrationFormFields }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeFormInput: bindActionCreators(createInputChangeAction, dispatch),\n    submitForm: bindActionCreators(createFormSubmitAction, dispatch),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\n","import React from 'react';\nimport './YouAreRegistred.css';\n\nconst YouAreRegistred = (props) => {\n    return (\n        <div className=\"you-are-registred\">\n            <h1>You are successfully registred!</h1>\n            <h3>Your unique ID in Firebase is {props.id}</h3>\n            <h3>Contact me, to check out database content: </h3>\n            Telegram: <a href=\"https://t.me/tjbulick\" target=\"_blank\">tjbulick</a>\n            <br/>\n            ВКонтакте: <a href=\"https://vk.com/tjbulick\" target=\"_blank\">tjbulick</a>\n            <br/>\n            E-mail: <a href=\"mailto:e.pichtchalnikov@gmail.com?subject=Доступ к Firebase\">e.pichtchalnikov@gmail.com</a>\n        </div>\n    )\n}\n\nexport default YouAreRegistred;","import React from 'react';\nimport './App.css';\nimport RegistrationForm from './RegistrationForm';\nimport rocketImage from './rocket.jpg';\nimport { connect } from 'react-redux';\nimport YouAreRegistred from './YouAreRegistred';\n\nconst App = (props) => {\n    return (\n        <div className=\"app\">\n            {props.isRegistred ? <YouAreRegistred id={props.id} /> : <RegistrationForm />}\n            <img src={rocketImage} alt=\"\" height=\"500px\" />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isRegistred: state.isRegistred,\n        id: state.id,\n    }\n};\n\nexport default connect(mapStateToProps)(App);","import { CHANGE_FORM_INPUT, REGISTRATION_SUCCEEDED } from './actions';\n\nconst initialState = {\n    isRegistred: false,\n    id: null,\n    registrationFormFields: {\n        firstName: '',\n        secondName: '',\n        username: '',\n        email: '',\n        phone: '',\n    },\n};\n\nexport function rootReducer(state = initialState, action) {\n    switch (action.type) {\n        case CHANGE_FORM_INPUT:\n            const newState = { ...state };\n            newState.registrationFormFields[action.inputName] = action.payload;\n            return newState\n        case REGISTRATION_SUCCEEDED:\n            return { ...state, isRegistred: true, id: action.payload };\n        default:\n            return state\n    }\n}","import { takeEvery, call, put, select } from 'redux-saga/effects';\nimport { FORM_SUBMIT, createRegistrationSucceededAction } from './store/actions';\nimport FirebaseService from './services/FirebaseService';\n\n// Как выглядит алгоритм регистрации:\n// 1. получить данные формы из стора\n// 2. передать их в метод writeUserData()\n// 3. в случае успеха задиспатчить экшн REGISTRATION_SUCCEEDED с айди нового документа в базе\n// 4. если промис завершился ошибкой, выводим ошибку в консоль\n\nconst firebaseService = new FirebaseService();\n\nfunction sendRegisterRequest(registrationFormFields) {\n    // this is a side-effect\n    return firebaseService.writeUserData({\n        firstName: registrationFormFields.firstName,\n        secondName: registrationFormFields.secondName,\n        username: registrationFormFields.username,\n        email: registrationFormFields.email,\n        phone: registrationFormFields.phone,\n    });\n}\n\nfunction* formSubmitWorker() {\n    // get values from store state\n    const registrationFormFields = yield select(state => state.registrationFormFields);\n    try {\n        // firebase returns a docRef (reference to a document) when you add something to the database\n        // send asyncronous request with form fields as an object to firebase\n        const result = yield call(sendRegisterRequest, registrationFormFields);\n        console.log('Document written with ID: ', result.id);\n        yield put(createRegistrationSucceededAction(result))\n    } catch (error) {\n        console.log('Registration failed with ' + error);\n    }\n}\n\nexport function* watchFormSubmit() {\n    yield takeEvery(FORM_SUBMIT, formSubmitWorker)\n}","import * as firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nexport default class FirebaseService {\n    constructor() {\n        this.firebaseConfig = {\n            apiKey: \"AIzaSyBSTRgnDd3k1x5x5NAK7A4jpFoMKTVY_OA\",\n            authDomain: \"liis-test.firebaseapp.com\",\n            databaseURL: \"https://liis-test.firebaseio.com\",\n            projectId: \"liis-test\",\n            storageBucket: \"liis-test.appspot.com\",\n            messagingSenderId: \"739295187595\",\n            appId: \"1:739295187595:web:1f4e9b004bc96c4af7ba8e\"\n        };\n        firebase.initializeApp(this.firebaseConfig);\n        this.db = firebase.firestore();\n    }\n\n    writeUserData = async (user) => {\n        return await this.db.collection('users').add(user)\n        // .then(function(docRef) {\n        //     console.log(\"Document written with ID: \", docRef.id);\n        // })\n        // .catch(function(error) {\n        //     console.error(\"Error adding document: \", error);\n        // });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport './index.css';\nimport { rootReducer } from './store/reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport { watchFormSubmit } from './sagas';\n\n// use composeEnhancers to use redux-saga enhancer and redux devtools together\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\nsagaMiddleware.run(watchFormSubmit);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));"],"sourceRoot":""}